IF
	Global("RR#Active","LOCALS",0)
	OR(4)
	  AttackedBy([ANYONE],DEFAULT)
	  TookDamage()
	  Help([EVILCUTOFF.0.MEPHIT])
	  Gender(Myself,3) // gated mephit
THEN
	RESPONSE #100
		SetGlobal("RR#Active","LOCALS",1)
		SetGlobalTimer("RR#Rest","LOCALS",2400) // 8 hours
		Enemy()
		Help()
		Continue()
END

IF
	Global("RR#Active","LOCALS",0)
        Allegiance(Myself,EVILCUTOFF)
	See([GOODCUTOFF]) // this cannot be in the previous block, otherwise neutral creatures would go hostile upon seeing a party member
THEN
	RESPONSE #100
		SetGlobal("RR#Active","LOCALS",1)
		SetGlobalTimer("RR#Rest","LOCALS",2400) // 8 hours
		Enemy()
		Help()
		Continue()
END

IF
	OR(4)
	  Global("RR#Active","LOCALS",0)
          !Allegiance(Myself,EVILCUTOFF) // better way to check for charm because STATE_CHARMED persists when the creature is attacked and becomes red circled again
	  StateCheck(Myself,STATE_IMMOBILE) // using this instead of STATE_DISABLED because the latter includes STATE_CHARMED
	  StateCheck(Myself,STATE_REALLY_DEAD) // prevents contingencies and other ReallyForceSpell() stuff from popping up on dead creatures
THEN
	RESPONSE #100
		NoAction()
END

IF

	StateCheck(Myself,STATE_PANIC)  // needed because the AI can perform script actions (i.e. drink potions) while panicked, unlike the player
THEN
	RESPONSE #100
		RandomWalkContinuous() // using this instead of NoAction() because otherwise panicked characters would stand in place
END

IF
	Global("RR#Active","LOCALS",1)
	!InActiveArea(Myself)
	!See([GOODCUTOFF])
THEN
	RESPONSE #100
		NoAction()
END

IF
	!GlobalTimerNotExpired("RR#Rest","LOCALS") // re-initialize the rest timer
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Rest","LOCALS",2400) // 8 hours
		SetGlobal("RR#Taunt","LOCALS",0) // reset Taunt variable
                ApplySpell(Myself,RESTORE_FULL_HEALTH) // heal up
                Rest()
END

IF
	!GlobalTimerNotExpired("RR#Help","LOCALS") // shout for help every two rounds while in combat, other mephits may hear it and join the battle
	See([GOODCUTOFF])
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Help","LOCALS",12)
		Help()
		Continue()
END

IF
	!Gender(Myself,3) // the mephit has not been gated
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!GlobalTimerNotExpired("RR#Gate","LOCALS")
        Global("RR#MNOGT","GLOBAL",0) // gating is allowed
        OR(3)
          RandomNum(7,1)
	  HPPercentLT(Myself,31)
	  !See([GOODCUTOFF])
THEN
	RESPONSE #25
		SetGlobalTimer("RR#Cast","LOCALS",8)
		SetGlobalTimer("RR#Gate","LOCALS",300) // a gate can be opened only once per hour
                DisplayStringHead(Myself,@1800) // attempts to open an interplanar gate
		ForceSpellRES("RR#MSAGT",Myself) // Gate (Radiant Mephit version)
	RESPONSE #75
		SetGlobalTimer("RR#Cast","LOCALS",8)
		SetGlobalTimer("RR#Gate","LOCALS",300) // a gate can be opened only once per hour
                DisplayStringHead(Myself,@1801) // fails to open an interplanar gate
		SpellNoDec(Myself,DO_NOTHING)
END

IF
        RandomNum(6,1) // rare, random usage of Taunt
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See([PC.HUMANOID.0.MAGE_ALL]) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims since this is a low priority ability
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See([GOODCUTOFF.HUMANOID])
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSPOLY) // prioritize targets that have poor saves vs. polymorph
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(SecondNearest([GOODCUTOFF.HUMANOID]))
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSPOLY) // prioritize targets that have poor saves vs. polymorph
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(ThirdNearest([GOODCUTOFF.HUMANOID]))
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSPOLY) // prioritize targets that have poor saves vs. polymorph
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(FourthNearest([GOODCUTOFF.HUMANOID]))
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSPOLY) // prioritize targets that have poor saves vs. polymorph
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(FifthNearest([GOODCUTOFF.HUMANOID]))
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSPOLY) // prioritize targets that have poor saves vs. polymorph
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(SixthNearest([GOODCUTOFF.HUMANOID]))
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSPOLY) // prioritize targets that have poor saves vs. polymorph
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END


IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See([GOODCUTOFF])
	!General(LastSeenBy(Myself),UNDEAD)
        !Race(LastSeenBy(Myself),SLIME)
	!Race(LastSeenBy(Myself),DEMONIC)
        !Race(LastSeenBy(Myself),TROLL)
        !Race(LastSeenBy(Myself),GOLEM)
    !Race(LastSeenBy(Myself),ELEMENTAL)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSPOLY)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(SecondNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
        !Race(LastSeenBy(Myself),SLIME)
	!Race(LastSeenBy(Myself),DEMONIC)
        !Race(LastSeenBy(Myself),TROLL)
        !Race(LastSeenBy(Myself),GOLEM)
    !Race(LastSeenBy(Myself),ELEMENTAL)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSPOLY)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(ThirdNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
        !Race(LastSeenBy(Myself),SLIME)
	!Race(LastSeenBy(Myself),DEMONIC)
        !Race(LastSeenBy(Myself),TROLL)
        !Race(LastSeenBy(Myself),GOLEM)
    !Race(LastSeenBy(Myself),ELEMENTAL)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSPOLY)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(FourthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
        !Race(LastSeenBy(Myself),SLIME)
	!Race(LastSeenBy(Myself),DEMONIC)
        !Race(LastSeenBy(Myself),TROLL)
        !Race(LastSeenBy(Myself),GOLEM)
    !Race(LastSeenBy(Myself),ELEMENTAL)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSPOLY)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(FifthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
        !Race(LastSeenBy(Myself),SLIME)
	!Race(LastSeenBy(Myself),DEMONIC)
        !Race(LastSeenBy(Myself),TROLL)
        !Race(LastSeenBy(Myself),GOLEM)
    !Race(LastSeenBy(Myself),ELEMENTAL)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSPOLY)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	See(SixthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
        !Race(LastSeenBy(Myself),SLIME)
	!Race(LastSeenBy(Myself),DEMONIC)
        !Race(LastSeenBy(Myself),TROLL)
        !Race(LastSeenBy(Myself),GOLEM)
    !Race(LastSeenBy(Myself),ELEMENTAL)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSPOLY)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		ForceSpellRES("RR#MSASC",LastSeenBy(Myself)) // Salt Crystals
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See([PC.HUMANOID.0.MAGE_ALL]) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims since this is a low priority ability
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(SecondNearest([PC.HUMANOID.0.MAGE_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(ThirdNearest([PC.HUMANOID.0.MAGE_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See([PC.HUMANOID.0.BARD_ALL]) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(SecondNearest([PC.HUMANOID.0.BARD_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(ThirdNearest([PC.HUMANOID.0.BARD_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See([PC.HUMANOID.0.CLERIC_ALL]) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(SecondNearest([PC.HUMANOID.0.CLERIC_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(ThirdNearest([PC.HUMANOID.0.CLERIC_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See([PC.HUMANOID.0.DRUID_ALL]) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(SecondNearest([PC.HUMANOID.0.DRUID_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
        Global("RR#Taunt","LOCALS",0) // 1x per day
	See(ThirdNearest([PC.HUMANOID.0.DRUID_ALL])) // prioritize spellcasters
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	!StateCheck(LastSeenBy(Myself),STATE_BERSERK)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),9,SAVEVSSPELL) // only target really susceptible victims
	!Range(LastSeenBy(Myself),6) // prioritize distant targets
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS) 
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStatGT(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquiped("IMOENHP1",LastSeenBy(Myself)) // Imoen's Belt
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
                IncrementGlobal("RR#Taunt","LOCALS",1)
		ForceSpellRES("RR#MSATA",LastSeenBy(Myself)) // Taunt
END

IF
	!Gender(Myself,3) // the mephit has not been gated
	!GlobalTimerNotExpired("RR#Cast","LOCALS") // open a gate if all other abilities are unavailable
	!GlobalTimerNotExpired("RR#Gate","LOCALS")
        Global("RR#MNOGT","GLOBAL",0) // gating is allowed
THEN
	RESPONSE #25
		SetGlobalTimer("RR#Cast","LOCALS",8)
		SetGlobalTimer("RR#Gate","LOCALS",300) // a gate can be opened only once per hour
                DisplayStringHead(Myself,@1800) // attempts to open an interplanar gate
		ForceSpellRES("RR#MSAGT",Myself) // Gate (Radiant Mephit version)
	RESPONSE #75
		SetGlobalTimer("RR#Cast","LOCALS",8)
		SetGlobalTimer("RR#Gate","LOCALS",300) // a gate can be opened only once per hour
                DisplayStringHead(Myself,@1801) // fails to open an interplanar gate
		SpellNoDec(Myself,DO_NOTHING)
END

IF
	OR(6)  // note: this block specifically checks for Players in order to target unconscious opponents (if any) since they can't be seen otherwise
	  See(Player1)
	  See(Player2)
	  See(Player3)
	  See(Player4)
	  See(Player5)
	  See(Player6)
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT([GOODCUTOFF],0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
        CheckStatLT([GOODCUTOFF],100,RESISTSLASHING)
	See([GOODCUTOFF]) // note: this block is intended to check for opponents who may be panicked
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(SixthNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(SixthNearest([GOODCUTOFF]),STATE_PANIC)
        CheckStatLT(SixthNearest([GOODCUTOFF]),100,RESISTSLASHING)
	!StateCheck(SixthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
        CheckStatLT(SixthNearest([GOODCUTOFF]),1,STONESKINS)
	See(SixthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(FifthNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(FifthNearest([GOODCUTOFF]),STATE_PANIC)
        CheckStatLT(FifthNearest([GOODCUTOFF]),100,RESISTSLASHING)
	!StateCheck(FifthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
        CheckStatLT(FifthNearest([GOODCUTOFF]),1,STONESKINS)
	See(FifthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(FourthNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(FourthNearest([GOODCUTOFF]),STATE_PANIC)
        CheckStatLT(FourthNearest([GOODCUTOFF]),100,RESISTSLASHING)
	!StateCheck(FourthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
        CheckStatLT(FourthNearest([GOODCUTOFF]),1,STONESKINS)
	See(FourthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(ThirdNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(ThirdNearest([GOODCUTOFF]),STATE_PANIC)
        CheckStatLT(ThirdNearest([GOODCUTOFF]),100,RESISTSLASHING)
	!StateCheck(ThirdNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
        CheckStatLT(ThirdNearest([GOODCUTOFF]),1,STONESKINS)
	See(ThirdNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(SecondNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(SecondNearest([GOODCUTOFF]),STATE_PANIC)
        CheckStatLT(SecondNearest([GOODCUTOFF]),100,RESISTSLASHING)
	!StateCheck(SecondNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
        CheckStatLT(SecondNearest([GOODCUTOFF]),1,STONESKINS)
	See(SecondNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT([GOODCUTOFF],0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck([GOODCUTOFF],STATE_PANIC)
        CheckStatLT([GOODCUTOFF],100,RESISTSLASHING)
	!StateCheck([GOODCUTOFF],STATE_MIRRORIMAGE)
        CheckStatLT([GOODCUTOFF],1,STONESKINS)
	See([GOODCUTOFF])
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(SecondNearest([PC.0.0.MAGE]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(SecondNearest([PC.0.0.MAGE]),STATE_PANIC)
        CheckStatLT(SecondNearest([PC.0.0.MAGE]),100,RESISTSLASHING)
	!StateCheck(SecondNearest([PC.0.0.MAGE]),STATE_MIRRORIMAGE)
        CheckStatLT(SecondNearest([PC.0.0.MAGE]),1,STONESKINS)
	See(SecondNearest([PC.0.0.MAGE])) // these blocks are optimized for targeting low AC characters such as single-class mages and mage/thieves
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT([PC.0.0.MAGE],0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck([PC.0.0.MAGE],STATE_PANIC)
        CheckStatLT([PC.0.0.MAGE],100,RESISTSLASHING)
	!StateCheck([PC.0.0.MAGE],STATE_MIRRORIMAGE)
        CheckStatLT([PC.0.0.MAGE],1,STONESKINS)
	See([PC.0.0.MAGE]) // these blocks are optimized for targeting low AC characters such as single-class mages and mage/thieves
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(SecondNearest([PC.0.0.MAGE_THIEF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(SecondNearest([PC.0.0.MAGE_THIEF]),STATE_PANIC)
        CheckStatLT(SecondNearest([PC.0.0.MAGE_THIEF]),100,RESISTSLASHING)
	!StateCheck(SecondNearest([PC.0.0.MAGE_THIEF]),STATE_MIRRORIMAGE)
        CheckStatLT(SecondNearest([PC.0.0.MAGE_THIEF]),1,STONESKINS)
	See(SecondNearest([PC.0.0.MAGE_THIEF])) // these blocks are optimized for targeting low AC characters such as single-class mages and mage/thieves
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT([PC.0.0.MAGE_THIEF],0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck([PC.0.0.MAGE_THIEF],STATE_PANIC)
        CheckStatLT([PC.0.0.MAGE_THIEF],100,RESISTSLASHING)
	!StateCheck([PC.0.0.MAGE_THIEF],STATE_MIRRORIMAGE)
        CheckStatLT([PC.0.0.MAGE_THIEF],1,STONESKINS)
	See([PC.0.0.MAGE_THIEF]) // these blocks are optimized for targeting low AC characters such as single-class mages and mage/thieves
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(WorstAC([PC]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	!StateCheck(WorstAC([PC]),STATE_PANIC)
        CheckStatLT(WorstAC([PC]),100,RESISTSLASHING)
	!StateCheck(WorstAC([PC]),STATE_MIRRORIMAGE)
        CheckStatLT(WorstAC([PC]),1,STONESKINS)
        !StateCheck(WorstAC([PC]),STATE_CHARMED)
	See(WorstAC([PC])) // these blocks are optimized for targeting low AC characters such as single-class mages and mage/thieves
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	AttackedBy([GOODCUTOFF],DEFAULT)
	!CheckStatGT(LastAttackerOf(Myself),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
        !StateCheck(LastAttackerOf(Myself),STATE_PANIC)
        CheckStatLT(LastAttackerOf(Myself),100,RESISTSLASHING)
	Range(LastAttackerOf(Myself),8)
	RandomNum(3,1)
	See(LastAttackerOf(Myself))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	AttackedBy([GOODCUTOFF],DEFAULT)
	!CheckStatGT(LastAttackerOf(Myself),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
        !StateCheck(LastAttackerOf(Myself),STATE_PANIC)
        CheckStatLT(LastAttackerOf(Myself),100,RESISTSLASHING)
	Range(LastAttackerOf(Myself),4)
	See(LastAttackerOf(Myself))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(SixthNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(SixthNearest([GOODCUTOFF]),STATE_IMMOBILE)
        CheckStatLT(SixthNearest([GOODCUTOFF]),100,RESISTSLASHING)
	See(SixthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(FifthNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(FifthNearest([GOODCUTOFF]),STATE_IMMOBILE)
        CheckStatLT(FifthNearest([GOODCUTOFF]),100,RESISTSLASHING)
	See(FifthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(FourthNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(FourthNearest([GOODCUTOFF]),STATE_IMMOBILE)
        CheckStatLT(FourthNearest([GOODCUTOFF]),100,RESISTSLASHING)
	See(FourthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(ThirdNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(ThirdNearest([GOODCUTOFF]),STATE_IMMOBILE)
        CheckStatLT(ThirdNearest([GOODCUTOFF]),100,RESISTSLASHING)
	See(ThirdNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(SecondNearest([GOODCUTOFF]),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(SecondNearest([GOODCUTOFF]),STATE_IMMOBILE)
        CheckStatLT(SecondNearest([GOODCUTOFF]),100,RESISTSLASHING)
	See(SecondNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT([GOODCUTOFF],0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck([GOODCUTOFF],STATE_IMMOBILE)
        CheckStatLT([GOODCUTOFF],100,RESISTSLASHING)
	See([GOODCUTOFF])
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(Player6,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(Player6,STATE_IMMOBILE)
        CheckStatLT(Player6,100,RESISTSLASHING)
	See(Player6)
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(Player5,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(Player5,STATE_IMMOBILE)
        CheckStatLT(Player5,100,RESISTSLASHING)
	See(Player5)
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(Player4,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(Player4,STATE_IMMOBILE)
        CheckStatLT(Player4,100,RESISTSLASHING)
	See(Player4)
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(Player3,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(Player3,STATE_IMMOBILE)
        CheckStatLT(Player3,100,RESISTSLASHING)
	See(Player3)
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(Player2,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(Player2,STATE_IMMOBILE)
        CheckStatLT(Player2,100,RESISTSLASHING)
	See(Player2)
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	!CheckStatGT(Player1,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle of higher
	StateCheck(Player1,STATE_IMMOBILE)
        CheckStatLT(Player1,100,RESISTSLASHING)
	See(Player1)
	False()
THEN
	RESPONSE #100
		NoAction()
END

IF
	Global("RR#NOPND","GLOBAL",0) // opening doors is allowed
    Allegiance(Myself,EVILCUTOFF) // humanoids and some intelligent monsters can open unlocked doors
    !AreaType(OUTDOOR)
    !Range(NearestEnemyOf(Myself),30)
    Range(NearestDoor,15) // if the nearest door is in visual range. note: this seems to auto-skip locked doors
    OpenState(NearestDoor,FALSE)
    OR(2)
      !AreaCheck("AR0603") // Irenicus' Dungeon level 2 (avoid traps behind closed doors)
      !See("Door04") // this door leads to the trapped corridor
THEN
    RESPONSE #100
        MoveToObject(NearestDoor)
        OpenDoor(NearestDoor)
END

IF
	!StateCheck(LastSeenBy(Myself),STATE_REALLY_DEAD)
        !StateCheck(LastSeenBy(Myself),STATE_INVISIBLE)
    Allegiance(LastSeenBy(Myself),GOODCUTOFF) // safety check
        OR(2)
	  !StateCheck(Myself,STATE_BLIND) // don't attack when blinded
	  Range(LastSeenBy(Myself),2) // unless the target is extremely close by
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Mantle or higher
        CheckStatLT(LastSeenBy(Myself),100,RESISTSLASHING)
THEN
	RESPONSE #100
		AttackReevaluate(LastSeenBy(Myself),30)
END

IF
	!GlobalTimerNotExpired("RR#Move","LOCALS") // help -> move timer
	Help([EVILCUTOFF.0.MEPHIT])
        InMyArea(LastHelp(Myself))
	!StateCheck(LastHelp(Myself),STATE_REALLY_DEAD)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Move","LOCALS",6)
		MoveToObject(LastHelp(Myself))
END

IF
	!GlobalTimerNotExpired("RR#Move","LOCALS")
THEN
	RESPONSE #100
		RandomWalkContinuous()
END