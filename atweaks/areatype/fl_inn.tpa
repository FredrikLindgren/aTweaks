//////////////////////////////////
//FL_INN
//VERSION 1
//////////////////////////////////
//This WeiDU .tpa file will install the FL_INN area type by claiming the first unoccupied area-type bit, appending the necessary label to areatype.ids and write the associated numerical value to the bitfield at 0x48 in the .are file in a pre-determined list of areas. Everything is done in a non-cumulative manner.

//Requires BG1 Platform-Abstraction Layer
//////////////////////////////////

///add CA

DEFINE_PATCH_FUNCTION fl#write_area_type INT_VAR fl#areatype = FL_INN BEGIN
  PATCH_IF SOURCE_SIZE > 0x11b BEGIN
    WRITE_SHORT 0x48 THIS BOR (1 << fl#areatype)
  END
END

DEFINE_ACTION_FUNCTION fl#inn_add_area_type RET FL_INN BEGIN //By wrapping it in a function we do not accidentally contaminate the install environment with our variables

  // Work-around for a bug in BG: EE
  ACTION_IF GAME_IS ~bgee~ AND !FILE_CONTAINS_EVALUATED (areatype.ids "CANRESTOTHER") BEGIN
    APPEND areatype.ids "128 CANRESTOTHER"
  END

  ADD_AREA_TYPE FL_INN

/*
  OUTER_SET FL_INN = IDS_OF_SYMBOL (areatype FL_INN) //This serves to both check if the label even exists and, if so, retrieve the value
  ACTION_IF FL_INN < 0 BEGIN //A result of "-1" means the label does not exist
    OUTER_FOR (p=1;p<16;++p) BEGIN
      OUTER_SET FL_INN = 2 ** p //2^p
      ACTION_IF !FILE_CONTAINS_EVALUATED (areatype.ids "^[ %TAB%]*%FL_INN%") BEGIN
        APPEND areatype.ids "%FL_INN% FL_INN"
        OUTER_SET p = 20
      END
    END
    ACTION_IF p = 16 BEGIN //If p = 16 there were no free bits in areatype.ids and consequently we have to abort, or problems would ensue
      FAIL ~ERROR: No space in areatype.ids for FL_INN flag~
    END
  END
*/

  ACTION_FOR_EACH area IN
    /*Bonehill:*/ bh0107 bh0120 bh0123 bh0115 bh2020 bh2024
    /*Aran Whitehand:*/ "c-ar01" "c-ar02" "c-ar03"
    /*TDD:*/ arpo06 arpo07 dd0118 dd0119 dd1008 dd1008b dd3302 dd3334 dd3335
    /*RoT:*/ ra3901 ra5104 ra5105 rr3104 rr3105 rr3117 rr3118 rr3305 rr3312
    /*Undying:*/ cm7000 cm7100
    /*NTotSC*/ ar33pb
    /*Soubar:*/ ar4262 ar4263 ar4264 ar4265 ar4266 ar4267 ar4268 ar4269 ar4271 ar4272 ar4273 ar4274 ar4275 ar4276
    /*CtB:*/ ar3651 ar3652
    /*FFT:*/ ys0160 ys0381 ys0382 ys0383 ys0396 ys0413 ys0414
    /*NEJ:*/ tt1008 tt2114 tt2115
  BEGIN
    ACTION_IF FILE_EXISTS_IN_GAME "%area%.are" BEGIN
      COPY_EXISTING "%area%.are" override
        LPF fl#write_area_type END
      BUT_ONLY
    END
  END

  ACTION_IF GAME_IS ~soa tob bgt bg2ee eet~ BEGIN
    ACTION_FOR_EACH area IN
      /*BG2:*/ ar0021 ar0022 ar0313 ar0314 ar0406 ar0509 ar0510 ar0511 ar0513 ar0514 ar0515 ar0704 ar0709 ar0712 ar1105 ar1602 ar2010 ar2202 ar2203 ar5003 ar5501
    BEGIN
      ACTION_IF FILE_EXISTS_IN_GAME "%area%.are" BEGIN
        COPY_EXISTING "%area%.are" override
          LPF fl#write_area_type END
        BUT_ONLY
      END
    END
  END

  ACTION_IF GAME_IS ~tutu tutu_totsc bgt bgee eet~ BEGIN
    ACTION_FOR_EACH area IN
      /*BG1:*/ ar0103 ar0104 ar0105 ar0106 ar0107 ar0114 ar0115 ar0116 ar0117 ar0118 ar0119 ar0120 ar0121 ar0133 ar0134 ar0135 ar0136 ar0154 ar0165 ar0166 ar0171 ar0705 ar0706 ar0720 ar0807 ar0808 ar1001 ar1109 ar1110 ar1306 ar1307 ar1215 ar2301 ar2302 ar2303 ar2616 ar2617 ar2629 ar2630 ar3303 ar3304 ar3305 ar3306 ar3307 ar3308 ar3351 ar3352 ar3357 ar4801 ar4809
    BEGIN
      LAF fl#bg1pal STR_VAR file = EVAL "%area%.are" RET area = file END
      ACTION_IF FILE_EXISTS_IN_GAME "%area%" BEGIN
        COPY_EXISTING "%area%" override
          LPF fl#write_area_type END
        BUT_ONLY
      END
    END
  END

END //DEFINE_ACTION_FUNCTION

ACTION_IF ENGINE_IS ~soa tob bgee bg2ee~ BEGIN

  LAF fl#inn_add_area_type RET FL_INN = FL_INN END

END
ELSE BEGIN
  PRINT ~WARNING: FL_INN is only available for games based on the BG2 engine~
END

